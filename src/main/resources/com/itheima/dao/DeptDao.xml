<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.itheima.dao.DeptDao">
    <!--配置实体类属性和数据库表中列的对应关系-->
    <resultMap id="BaseResultMap" type="com.itheima.domain.Dept">
        <id column="dept_id" jdbcType="VARCHAR" property="id"/>
        <result column="dept_name" jdbcType="VARCHAR" property="deptName"/>
        <result column="parent_id" jdbcType="VARCHAR" property="parentId"/>
        <result column="state" jdbcType="DECIMAL" property="state"/>

        <!--该部门包含一个父部门，也就是一个对象，配置一对一关系：private Dept parent;
            property="parent" :属性名
            javaType="Dept"   :属性类型
            column="parent_id" :根据parent_id查询父部门信息
        -->
        <association property="parent" javaType="Dept" column="parent_id"
                     select="com.itheima.dao.DeptDao.findById"/>
    </resultMap>

    <!--配置查询所有，带条件-->
    <select id="findAll" resultMap="BaseResultMap">
        select * from ss_dept
    </select>

    <!--配置根据ID查询-->
    <select id="findById" parameterType="java.lang.String" resultMap="BaseResultMap">
        select * from ss_dept where dept_id = #{id}
    </select>

    <!--配置根据id删除-->
    <delete id="delete" parameterType="java.lang.String">
        delete from ss_dept  where dept_id = #{id}
    </delete>

    <!--配置全字段插入，当某个字段没有值时，插入null-->
    <insert id="save" parameterType="com.itheima.domain.Dept">
        insert into ss_dept (dept_id, dept_name, parent_id,state)
        values (#{id}, #{deptName}, #{parentId},#{state})
    </insert>

    <!--配置全字段更新，当提供的数据为null时，数据库数据会被更新为null-->
    <update id="update" parameterType="com.itheima.domain.Dept">
        update ss_dept
        set dept_name = #{deptName},
        parent_id = #{parentId},
        state = #{state}
        where dept_id = #{id}
    </update>

</mapper>